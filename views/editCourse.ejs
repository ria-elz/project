<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Course</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        /* Matching Theme */
        body {
            background-color: #f8f9fa;
            font-family: 'Poppins', sans-serif;
        }
        .navbar {
            background-color: #004080;
        }
        .navbar-brand {
            font-weight: bold;
        }
        .btn-primary {
            background-color: #004080;
            border: none;
        }
        .btn-primary:hover {
            background-color: #003366;
        }
        .container {
            max-width: 900px;
        }
        .card {
            border-radius: 10px;
            border: none;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            margin-bottom: 25px;
        }
        .file-item {
            position: relative;
            margin-bottom: 15px;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 10px;
            background-color: white;
        }
        .file-preview {
            max-width: 100%;
            max-height: 200px;
            border-radius: 5px;
        }
        .remove-file {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(255,0,0,0.7);
            color: white;
            border: none;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 10;
        }
        .file-name {
            font-size: 0.9rem;
            margin-top: 5px;
            word-break: break-all;
        }
        .section-title {
            margin-top: 30px;
            margin-bottom: 15px;
            font-weight: 600;
            color: #004080;
            border-bottom: 2px solid #e9ecef;
            padding-bottom: 8px;
        }
        .add-files-section {
            background-color: #f1f8ff;
            border-radius: 8px;
            padding: 15px;
            margin-top: 10px;
        }
        #saveSpinner {
            display: none;
            margin-right: 5px;
        }
        #savingOverlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }
        .saving-content {
            background: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <!-- Saving Overlay -->
    <div id="savingOverlay">
        <div class="saving-content">
            <div class="spinner-border text-primary mb-3" role="status">
                <span class="visually-hidden">Saving...</span>
            </div>
            <h5>Saving your changes...</h5>
            <p class="text-muted">Please wait, you'll be redirected automatically.</p>
        </div>
    </div>

    <!-- Navbar -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container">
            <a class="navbar-brand" href="/instructor/dashboard">
                <i class="bi bi-arrow-left"></i> Back to Dashboard
            </a>
        </div>
    </nav>

    <!-- Main Container -->
    <div class="container py-5">
        <div class="card p-4">
            <h2 class="text-center mb-4 text-primary"><i class="bi bi-pencil-square"></i> Edit Course</h2>

            <% if (messages && messages.error) { %>
                <div class="alert alert-danger alert-dismissible fade show">
                    <i class="bi bi-exclamation-triangle-fill"></i> <%= messages.error %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            <% } %>

            <!-- Course Form -->
            <form id="editCourseForm" action="/instructor/update-course/<%= course.id %>?_method=PUT" method="POST" enctype="multipart/form-data">
                <input type="hidden" name="_method" value="PUT">
                
                <!-- Basic Info Section -->
                <div class="card p-3 mb-4">
                    <h5 class="card-title"><i class="bi bi-info-circle"></i> Basic Information</h5>
                    <div class="mb-3">
                        <label for="title" class="form-label">Course Title</label>
                        <input type="text" class="form-control" id="title" name="title" value="<%= course.title %>" required>
                    </div>
                    
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="description" rows="4" required><%= course.description %></textarea>
                    </div>
                </div>

                <!-- Videos Section -->
                <div class="card p-3 mb-4">
                    <h5 class="card-title"><i class="bi bi-camera-video"></i> Course Videos</h5>
                    
                    <div class="current-videos mb-3">
                        <% if (videos && videos.length > 0) { %>
                            <div class="row">
                                <% videos.forEach(video => { %>
                                    <div class="col-md-6 file-item">
                                        <video controls class="file-preview w-100">
                                            <source src="/uploads/<%= video %>">
                                        </video>
                                        <div class="file-name"><%= video %></div>
                                        <button type="button" class="remove-file" onclick="markForRemoval(this, 'video', '<%= video %>')">
                                            <i class="bi bi-x"></i>
                                        </button>
                                        <input type="hidden" name="keep_videos[]" value="<%= video %>">
                                    </div>
                                <% }) %>
                            </div>
                        <% } else { %>
                            <p class="text-muted">No videos uploaded yet</p>
                        <% } %>
                    </div>

                    <div class="add-files-section">
                        <label for="videos" class="form-label">Add New Videos</label>
                        <input type="file" name="videos" id="videos" class="form-control" multiple accept="video/*">
                        <div class="form-text">Upload videos in MP4, MKV, or AVI format. Max 100MB per file.</div>
                    </div>
                </div>

                <!-- Notes Section -->
                <div class="card p-3 mb-4">
                    <h5 class="card-title"><i class="bi bi-file-earmark-text"></i> Course Notes</h5>
                    
                    <div class="current-notes mb-3">
                        <% if (notes && notes.length > 0) { %>
                            <div class="list-group">
                                <% notes.forEach(note => { %>
                                    <div class="list-group-item file-item d-flex justify-content-between align-items-center">
                                        <div>
                                            <i class="bi bi-file-earmark-pdf text-danger me-2"></i>
                                            <a href="/uploads/<%= note.note_url %>" target="_blank"><%= note.note_url %></a>
                                        </div>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="markForRemoval(this, 'note', '<%= note.id %>')">
                                            <i class="bi bi-trash"></i> Remove
                                        </button>
                                        <input type="hidden" name="keep_notes[]" value="<%= note.id %>">
                                    </div>
                                <% }) %>
                            </div>
                        <% } else { %>
                            <p class="text-muted">No notes uploaded yet</p>
                        <% } %>
                    </div>

                    <div class="add-files-section">
                        <label for="notes" class="form-label">Add New Notes</label>
                        <input type="file" name="notes" id="notes" class="form-control" multiple accept=".pdf,.doc,.docx">
                        <div class="form-text">Upload PDF, DOC, or DOCX files. Max 20MB per file.</div>
                    </div>
                </div>

                <!-- Hidden inputs to track deleted items -->
                <input type="hidden" id="deletedNotesInput" name="deletedNotes" value="">
                <input type="hidden" id="deletedVideosInput" name="deletedVideos" value="">
                <!-- Add a redirect URL -->
                <input type="hidden" name="redirectUrl" value="/instructor/dashboard">

                <!-- Form Buttons -->
                <div class="d-flex justify-content-between mt-4">
                    <a href="/instructor/dashboard" class="btn btn-outline-secondary">
                        <i class="bi bi-x-circle"></i> Cancel
                    </a>
                    <button type="submit" id="saveButton" class="btn btn-primary">
                        <span id="saveSpinner" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                        <i class="bi bi-save"></i> Save Changes
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Track items marked for deletion
        let deletedVideos = [];
        let deletedNotes = [];

        function markForRemoval(button, type, id) {
            // Add to appropriate list
            if (type === 'video') {
                deletedVideos.push(id);
                document.getElementById('deletedVideosInput').value = deletedVideos.join(',');
            } else if (type === 'note') {
                deletedNotes.push(id);
                document.getElementById('deletedNotesInput').value = deletedNotes.join(',');
            }
            
            // Hide the item visually
            const parent = button.closest('.file-item');
            parent.style.opacity = '0.5';
            parent.style.textDecoration = 'line-through';
            
            // Disable the button to prevent multiple clicks
            button.disabled = true;
            
            // Remove the keep_notes or keep_videos input
            const keepInput = parent.querySelector('input[name^="keep_"]');
            if (keepInput) {
                keepInput.remove();
            }
        }

        // Preview for new videos
        document.getElementById('videos').addEventListener('change', function(e) {
            const files = e.target.files;
            if (files.length > 0) {
                const previewContainer = document.createElement('div');
                previewContainer.className = 'mt-3 row';
                
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    const reader = new FileReader();
                    
                    const previewCol = document.createElement('div');
                    previewCol.className = 'col-md-6 mb-3';
                    
                    const previewItem = document.createElement('div');
                    previewItem.className = 'p-2 border rounded';
                    
                    const fileName = document.createElement('p');
                    fileName.className = 'mb-1 small';
                    fileName.textContent = file.name;
                    
                    previewItem.appendChild(fileName);
                    previewCol.appendChild(previewItem);
                    previewContainer.appendChild(previewCol);
                }
                
                // Find where to insert the preview
                const parentElement = this.parentElement;
                const existingPreview = parentElement.querySelector('.video-preview-container');
                if (existingPreview) {
                    parentElement.replaceChild(previewContainer, existingPreview);
                } else {
                    parentElement.appendChild(previewContainer);
                }
                previewContainer.className = 'video-preview-container ' + previewContainer.className;
            }
        });

        // Preview for new notes
        document.getElementById('notes').addEventListener('change', function(e) {
            const files = e.target.files;
            if (files.length > 0) {
                const previewContainer = document.createElement('div');
                previewContainer.className = 'mt-3';
                
                const fileList = document.createElement('ul');
                fileList.className = 'list-group';
                
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    
                    const listItem = document.createElement('li');
                    listItem.className = 'list-group-item';
                    
                    const icon = document.createElement('i');
                    if (file.name.endsWith('.pdf')) {
                        icon.className = 'bi bi-file-earmark-pdf text-danger me-2';
                    } else {
                        icon.className = 'bi bi-file-earmark-text text-primary me-2';
                    }
                    
                    listItem.appendChild(icon);
                    listItem.appendChild(document.createTextNode(file.name));
                    fileList.appendChild(listItem);
                }
                
                previewContainer.appendChild(fileList);
                
                // Find where to insert the preview
                const parentElement = this.parentElement;
                const existingPreview = parentElement.querySelector('.notes-preview-container');
                if (existingPreview) {
                    parentElement.replaceChild(previewContainer, existingPreview);
                } else {
                    parentElement.appendChild(previewContainer);
                }
                previewContainer.className = 'notes-preview-container ' + previewContainer.className;
            }
        });

        // Submit form normally - no fetch API since we need to see the actual server error
        document.getElementById('editCourseForm').addEventListener('submit', function() {
            // Show saving overlay
            document.getElementById('savingOverlay').style.display = 'flex';
            
            // Return true to allow the form to submit normally
            return true;
        });
    </script>
</body>
</html>